import 'package:flutter/material.dart';

class GuideScreen extends StatelessWidget {
  const GuideScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('キーの使い方'),
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            _buildCategory(
              '指数・根号',
              [
                _buildExample('x^2', ['x', 'x^y', '2']),
                _buildExample('sqrt(9)', ['√', '9', ')']),
                _buildExample('cbrt(8)', ['∛', '8', ')']),
                _buildExample('root(4,16)', ['ⁿ√', '4', ',', '16', ')']),
              ],
            ),
            const SizedBox(height: 24),
            _buildCategory(
              '分数・絶対値',
              [
                _buildExample('frac(1,2)', ['a/b', '1', ',', '2', ')']),
                _buildExample('frac(x+1,x-1)', ['a/b', 'x', '+', '1', ',', 'x', '-', '1', ')']),
                _buildExample('abs(x)', ['|x|', 'x', ')']),
                _buildExample('abs(3+4i)', ['|x|', '3', '+', '4', 'i', ')']),
              ],
            ),
            const SizedBox(height: 24),
            _buildCategory(
              '三角・対数関数',
              [
                _buildExample('sin(x)', ['sin(', 'x', ')']),
                _buildExample('cos(x)', ['cos(', 'x', ')']),
                _buildExample('tan(x)', ['tan(', 'x', ')']),
                _buildExample('ln(e)', ['ln(', 'e', ')']),
                _buildExample('log(100)', ['log(', '1', '0', '0', ')']),
              ],
            ),
            const SizedBox(height: 24),
            _buildCategory(
              '総和・積分・積',
              [
                _buildExample('sum(1,5,x)', ['Σ', '1', ',', '5', ',', 'x', ')']),
                _buildExample('prod(1,4,x)', ['Π', '1', ',', '4', ',', 'x', ')']),
                _buildExample('int(0,1,x^2,x)', ['∫', '0', ',', '1', ',', 'x', 'x^y', '2', ',', 'x', ')']),
                _buildExample('int(sin(x),x)', ['∫', 'sin(', 'x', ')', ',', 'x', ')']),
              ],
            ),
            const SizedBox(height: 24),
            _buildCategory(
              '複素数・組み合わせ',
              [
                _buildExample('3+4i', ['3', '+', '4', 'i']),
                _buildExample('conj(z)', ['z*', 'z', ')']),
                _buildExample('Re(z)', ['Re', 'z', ')']),
                _buildExample('Im(z)', ['Im', 'z', ')']),
                _buildExample('nPr(5,3)', ['P', '5', ',', '3', ')']),
                _buildExample('nCr(5,3)', ['C', '5', ',', '3', ')']),
              ],
            ),
            const SizedBox(height: 32),
            _buildTipsSection(context),
          ],
        ),
      ),
    );
  }

  Widget _buildCategory(String title, List<Widget> examples) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: const TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.bold,
            color: Colors.blue,
          ),
        ),
        const SizedBox(height: 12),
        ...examples,
      ],
    );
  }

  Widget _buildExample(String expression, List<String> keySequence) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: Colors.grey.shade50,
        borderRadius: BorderRadius.circular(8),
        border: Border.all(color: Colors.grey.shade300),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            '数式: ',
            style: const TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.w600,
            ),
          ),
          const SizedBox(height: 8),
          Text(
            'キーの順番:',
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.w500,
              color: Colors.grey.shade700,
            ),
          ),
          const SizedBox(height: 4),
          Wrap(
            spacing: 4,
            runSpacing: 4,
            children: keySequence.map((key) => _buildKeyChip(key)).toList(),
          ),
        ],
      ),
    );
  }

  Widget _buildKeyChip(String key) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
      decoration: BoxDecoration(
        color: Colors.blue.shade100,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: Colors.blue.shade300),
      ),
      child: Text(
        key,
        style: TextStyle(
          fontSize: 12,
          fontWeight: FontWeight.w600,
          color: Colors.blue.shade800,
        ),
      ),
    );
  }

  Widget _buildTipsSection(BuildContext context) {
    final tips = <String>[
      '関数キー（sin, cos, √ など）を押すと自動的に「(」が入力されます。',
      '矢印キー（← →）でカーソルを移動できます。',
      'DELキーでカーソルの左側を削除できます。',
      'Σ, Π, ∫ キーはカンマ区切りで下限・上限・式を入力します。',
      'a/bキーで分数を入力し、カンマで分子と分母を区切ります。',
      '必要に応じて ) キーで括弧を閉じてください。',
    ];

    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.blue.shade50,
        borderRadius: BorderRadius.circular(8),
        border: Border.all(color: Colors.blue.shade200),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            '💡 ヒント',
            style: TextStyle(
              fontSize: 16,
              fontWeight: FontWeight.bold,
              color: Colors.blue.shade800,
            ),
          ),
          const SizedBox(height: 8),
          ...tips.map(
            (tip) => Padding(
              padding: const EdgeInsets.only(bottom: 6),
              child: Text(
                '• ',
                style: TextStyle(
                  fontSize: 14,
                  color: Colors.blue.shade700,
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

